// Code generated by MockGen. DO NOT EDIT.
// Source: clusterautoscaler_client.go
//
// Generated by this command:
//
//	mockgen -source=clusterautoscaler_client.go -package=test -destination=test/mock_clusterautoscaler_client.go
//

// Package test is a generated GoMock package.
package test

import (
	context "context"
	reflect "reflect"

	v1 "github.com/openshift-online/ocm-sdk-go/clustersmgmt/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockClusterAutoscalerClient is a mock of ClusterAutoscalerClient interface.
type MockClusterAutoscalerClient struct {
	ctrl     *gomock.Controller
	recorder *MockClusterAutoscalerClientMockRecorder
	isgomock struct{}
}

// MockClusterAutoscalerClientMockRecorder is the mock recorder for MockClusterAutoscalerClient.
type MockClusterAutoscalerClientMockRecorder struct {
	mock *MockClusterAutoscalerClient
}

// NewMockClusterAutoscalerClient creates a new mock instance.
func NewMockClusterAutoscalerClient(ctrl *gomock.Controller) *MockClusterAutoscalerClient {
	mock := &MockClusterAutoscalerClient{ctrl: ctrl}
	mock.recorder = &MockClusterAutoscalerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterAutoscalerClient) EXPECT() *MockClusterAutoscalerClientMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockClusterAutoscalerClient) Create(ctx context.Context, clusterId string, instance *v1.ClusterAutoscaler) (*v1.ClusterAutoscaler, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, clusterId, instance)
	ret0, _ := ret[0].(*v1.ClusterAutoscaler)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockClusterAutoscalerClientMockRecorder) Create(ctx, clusterId, instance any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockClusterAutoscalerClient)(nil).Create), ctx, clusterId, instance)
}

// Delete mocks base method.
func (m *MockClusterAutoscalerClient) Delete(ctx context.Context, clusterId string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, clusterId)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockClusterAutoscalerClientMockRecorder) Delete(ctx, clusterId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockClusterAutoscalerClient)(nil).Delete), ctx, clusterId)
}

// Exists mocks base method.
func (m *MockClusterAutoscalerClient) Exists(ctx context.Context, clusterId string) (bool, *v1.ClusterAutoscaler, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exists", ctx, clusterId)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(*v1.ClusterAutoscaler)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Exists indicates an expected call of Exists.
func (mr *MockClusterAutoscalerClientMockRecorder) Exists(ctx, clusterId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exists", reflect.TypeOf((*MockClusterAutoscalerClient)(nil).Exists), ctx, clusterId)
}

// Get mocks base method.
func (m *MockClusterAutoscalerClient) Get(ctx context.Context, clusterId string) (*v1.ClusterAutoscaler, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, clusterId)
	ret0, _ := ret[0].(*v1.ClusterAutoscaler)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockClusterAutoscalerClientMockRecorder) Get(ctx, clusterId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockClusterAutoscalerClient)(nil).Get), ctx, clusterId)
}

// Update mocks base method.
func (m *MockClusterAutoscalerClient) Update(ctx context.Context, clusterId string, instance *v1.ClusterAutoscaler) (*v1.ClusterAutoscaler, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, clusterId, instance)
	ret0, _ := ret[0].(*v1.ClusterAutoscaler)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockClusterAutoscalerClientMockRecorder) Update(ctx, clusterId, instance any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockClusterAutoscalerClient)(nil).Update), ctx, clusterId, instance)
}
